generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model boosters {
  id          BigInt    @id @default(autoincrement())
  name        String    @db.VarChar(64)
  set_id      BigInt
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  created_by  BigInt?
  archived_at DateTime? @db.Timestamp(6)
  sets        sets      @relation(fields: [set_id], references: [id], onDelete: Cascade)
  cards       cards[]
}

model cards {
  id            BigInt      @id @default(autoincrement())
  name          String      @db.VarChar(64)
  collection_id BigInt
  set_id        BigInt
  booster_id    BigInt?
  rarity        String?     @db.VarChar(64)
  type          String?     @db.VarChar(64)
  set_number    Int?        @db.SmallInt
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  created_by    BigInt?
  archived_at   DateTime?   @db.Timestamp(6)
  boosters      boosters?   @relation(fields: [booster_id], references: [id], onDelete: Cascade)
  collections   collections @relation(fields: [collection_id], references: [id], onDelete: Cascade)
  sets          sets        @relation(fields: [set_id], references: [id], onDelete: Cascade)
}

model collections {
  id          BigInt    @id @default(autoincrement())
  name        String    @db.VarChar(64)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  created_by  BigInt?
  archived_at DateTime? @db.Timestamp(6)
  cards       cards[]
  users       users?    @relation(fields: [created_by], references: [id], onDelete: Cascade)
  sets        sets[]
}

model schema_migrations {
  version String @id @db.VarChar(128)
}

model sets {
  id            BigInt      @id @default(autoincrement())
  name          String      @db.VarChar(64)
  collection_id BigInt
  release_date  DateTime?   @db.Date
  created_at    DateTime    @default(now()) @db.Timestamp(6)
  updated_at    DateTime    @default(now()) @db.Timestamp(6)
  created_by    BigInt?
  archived_at   DateTime?   @db.Timestamp(6)
  boosters      boosters[]
  cards         cards[]
  collections   collections @relation(fields: [collection_id], references: [id], onDelete: Cascade)
}

model users {
  id          BigInt        @id @default(autoincrement())
  first_name  String        @db.VarChar(64)
  last_name   String        @db.VarChar(64)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  collections collections[]
}
